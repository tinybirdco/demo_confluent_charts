type Schema = {
  [index: string]: {
    type: 'string.symbol';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'string.uuid' | 'airline.airline' | 'airline.airport' | 'airline.airplane' | 'airline.aircraftType' | 'animal.dog' | 'animal.cat' | 'animal.snake' | 'animal.bear' | 'animal.lion' | 'animal.cetacean' | 'animal.horse' | 'animal.bird' | 'animal.cow' | 'animal.fish' | 'animal.crocodilia' | 'animal.insect' | 'animal.rabbit' | 'animal.rodent' | 'animal.type' | 'color.human' | 'color.space' | 'color.cssSupportedFunction' | 'color.cssSupportedSpace' | 'commerce.department' | 'commerce.productName' | 'commerce.productAdjective' | 'commerce.productMaterial' | 'commerce.product' | 'commerce.productDescription' | 'company.suffixes' | 'company.name' | 'company.companySuffix' | 'company.catchPhrase' | 'company.bs' | 'company.buzzPhrase' | 'company.catchPhraseAdjective' | 'company.catchPhraseDescriptor' | 'company.catchPhraseNoun' | 'company.bsAdjective' | 'company.buzzAdjective' | 'company.bsBuzz' | 'company.buzzVerb' | 'company.bsNoun' | 'company.buzzNoun' | 'database.type' | 'database.column' | 'database.collation' | 'database.engine' | 'database.mongodbObjectId' | 'finance.accountName' | 'finance.routingNumber' | 'finance.transactionType' | 'finance.currency' | 'finance.currencyCode' | 'finance.currencyName' | 'finance.currencySymbol' | 'finance.bitcoinAddress' | 'finance.litecoinAddress' | 'finance.creditCardCVV' | 'finance.creditCardIssuer' | 'finance.ethereumAddress' | 'finance.transactionDescription' | 'hacker.abbreviation' | 'hacker.adjective' | 'hacker.noun' | 'hacker.verb' | 'hacker.ingverb' | 'hacker.phrase' | 'internet.avatar' | 'internet.protocol' | 'internet.httpMethod' | 'internet.domainName' | 'internet.domainSuffix' | 'internet.domainWord' | 'internet.ip' | 'internet.ipv4' | 'internet.ipv6' | 'internet.port' | 'internet.userAgent' | 'location.city' | 'location.cityName' | 'location.buildingNumber' | 'location.street' | 'location.streetName' | 'location.secondaryAddress' | 'location.county' | 'location.country' | 'location.stateAbbr' | 'location.timeZone' | 'lorem.text' | 'music.genre' | 'music.songName' | 'person.gender' | 'person.sex' | 'person.sexType' | 'person.bio' | 'person.suffix' | 'person.jobTitle' | 'person.jobDescriptor' | 'person.jobArea' | 'person.jobType' | 'person.zodiacSign' | 'science.chemicalElement' | 'science.unit' | 'system.mimeType' | 'system.commonFileType' | 'system.commonFileExt' | 'system.fileType' | 'system.directoryPath' | 'system.filePath' | 'system.semver' | 'vehicle.type' | 'vehicle.color' | 'vehicle.vehicle' | 'vehicle.manufacturer' | 'vehicle.model' | 'vehicle.fuel' | 'vehicle.vin' | 'vehicle.vrm' | 'vehicle.bicycle' | 'random.word' | 'mockingbird.latitudeNumeric' | 'mockingbird.longitudeNumeric' | 'mockingbird.searchEngineName' | 'mockingbird.osName' | 'mockingbird.browserName' | 'mockingbird.browserEngineName' | 'mockingbird.datetimeNow' | 'mockingbird.datetimeRecent' | 'mockingbird.timestampNow' | any | 'datatype.uuid' | 'datatype.json' | 'git.branch' | 'git.commitMessage' | 'git.shortSha' | 'image.avatar' | 'image.unsplash' | 'image.lorempicsum' | 'image.placeholder' | 'image.avatarGitHub' | 'image.avatarLegacy' | 'phone.imei';
    count?: number;
  } | {
    type: 'string.hexadecimal';
    count?: number;
    params?: [
      undefined | {
        length?: number | {
          min: number;
          max: number;
        };
        casing?: 'upper' | 'lower' | 'mixed';
        prefix?: string;
      }
    ];
  } | {
    type: 'string.fromCharacters';
    count?: number;
    params?: [
      string | string[],
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'string.alpha';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        casing?: 'upper' | 'lower' | 'mixed';
        exclude?: string | Array<
          any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any
        >;
      }
    ];
  } | {
    type: 'string.alphanumeric';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        casing?: 'upper' | 'lower' | 'mixed';
        exclude?: string | Array<
          any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any
        >;
      }
    ];
  } | {
    type: 'string.binary';
    count?: number;
    params?: [
      undefined | {
        length?: number | {
          min: number;
          max: number;
        };
        prefix?: string;
      }
    ];
  } | {
    type: 'string.octal';
    count?: number;
    params?: [
      undefined | {
        length?: number | {
          min: number;
          max: number;
        };
        prefix?: string;
      }
    ];
  } | {
    type: 'string.numeric';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        allowLeadingZeros?: false | true;
        exclude?: string | Array<
          any | any | any | any | any | any | any | any | any | any | any
        >;
      }
    ];
  } | {
    type: 'string.sample';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'string.nanoid';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'number.binary';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
      }
    ];
  } | {
    type: 'number.octal';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
      }
    ];
  } | {
    type: 'number.float';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
        precision?: number;
      }
    ];
  } | {
    type: 'number.bigInt';
    count?: number;
    params?: [
      undefined | string | number | any | false | true | {
        min?: string | number | any | false | true;
        max?: string | number | any | false | true;
      }
    ];
  } | {
    type: 'number.int';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
      }
    ];
  } | {
    type: 'number.hex';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
      }
    ];
  } | {
    type: 'airline.recordLocator';
    count?: number;
    params?: [
      undefined | {
        allowNumerics?: false | true;
        allowVisuallySimilarCharacters?: false | true;
      }
    ];
  } | {
    type: 'airline.seat';
    count?: number;
    params?: [
      undefined | {
        aircraftType?: 'narrowbody' | 'regional' | 'widebody';
      }
    ];
  } | {
    type: 'airline.flightNumber';
    count?: number;
    params?: [
      undefined | {
        length?: number | {
          min: number;
          max: number;
        };
        addLeadingZeros?: false | true;
      }
    ];
  } | {
    type: 'color.rgb';
    count?: number;
    params?: [
      undefined | {
        prefix?: string;
        casing?: 'upper' | 'lower' | 'mixed';
        format?: 'binary' | 'hex' | 'css' | 'decimal';
        includeAlpha?: false | true;
      }
    ];
  } | {
    type: 'color.cmyk';
    count?: number;
    params?: [
      undefined | {
        format?: 'binary' | 'css' | 'decimal';
      }
    ];
  } | {
    type: 'color.hsl';
    count?: number;
    params?: [
      undefined | {
        format?: 'binary' | 'css' | 'decimal';
        includeAlpha?: false | true;
      }
    ];
  } | {
    type: 'color.hwb';
    count?: number;
    params?: [
      undefined | {
        format?: 'binary' | 'css' | 'decimal';
      }
    ];
  } | {
    type: 'color.lab';
    count?: number;
    params?: [
      undefined | {
        format?: 'binary' | 'css' | 'decimal';
      }
    ];
  } | {
    type: 'color.lch';
    count?: number;
    params?: [
      undefined | {
        format?: 'binary' | 'css' | 'decimal';
      }
    ];
  } | {
    type: 'color.colorByCSSColorSpace';
    count?: number;
    params?: [
      undefined | {
        format?: 'binary' | 'css' | 'decimal';
        space?: 'sRGB' | 'display-p3' | 'rec2020' | 'a98-rgb' | 'prophoto-rgb';
      }
    ];
  } | {
    type: 'commerce.price';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
        dec?: number;
        symbol?: string;
      },
      undefined | number,
      undefined | number,
      undefined | string
    ];
  } | {
    type: 'date.anytime';
    count?: number;
    params?: [
      undefined | {
        refDate?: string | number | any;
      }
    ];
  } | {
    type: 'date.past';
    count?: number;
    params?: [
      undefined | number | {
        years?: number;
        refDate?: string | number | any;
      },
      undefined | string | number | any
    ];
  } | {
    type: 'date.future';
    count?: number;
    params?: [
      undefined | number | {
        years?: number;
        refDate?: string | number | any;
      },
      undefined | string | number | any
    ];
  } | {
    type: 'date.between';
    count?: number;
    params?: [
      string | number | any | {
        from: string | number | any;
        to: string | number | any;
      },
      undefined | string | number | any
    ];
  } | {
    type: 'date.betweens';
    count?: number;
    params?: [
      string | number | any | {
        from: string | number | any;
        to: string | number | any;
        count?: number | {
          min: number;
          max: number;
        };
      },
      undefined | string | number | any,
      undefined | number
    ];
  } | {
    type: 'date.recent';
    count?: number;
    params?: [
      undefined | number | {
        days?: number;
        refDate?: string | number | any;
      },
      undefined | string | number | any
    ];
  } | {
    type: 'date.soon';
    count?: number;
    params?: [
      undefined | number | {
        days?: number;
        refDate?: string | number | any;
      },
      undefined | string | number | any
    ];
  } | {
    type: 'date.month';
    count?: number;
    params?: [
      undefined | {
        abbr?: false | true;
        abbreviated?: false | true;
        context?: false | true;
      }
    ];
  } | {
    type: 'date.weekday';
    count?: number;
    params?: [
      undefined | {
        abbr?: false | true;
        abbreviated?: false | true;
        context?: false | true;
      }
    ];
  } | {
    type: 'date.birthdate';
    count?: number;
    params?: [
      undefined | {
        min?: number;
        max?: number;
        mode?: 'age' | 'year';
        refDate?: string | number | any;
      }
    ];
  } | {
    type: 'finance.account';
    count?: number;
    params?: [
      undefined | number
    ];
  } | {
    type: 'finance.accountNumber';
    count?: number;
    params?: [
      undefined | number | {
        length?: number;
      }
    ];
  } | {
    type: 'finance.mask';
    count?: number;
    params?: [
      undefined | number,
      undefined | false | true,
      undefined | false | true
    ];
  } | {
    type: 'finance.maskedNumber';
    count?: number;
    params?: [
      undefined | number | {
        length?: number;
        parens?: false | true;
        ellipsis?: false | true;
      }
    ];
  } | {
    type: 'finance.amount';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
        dec?: number;
        symbol?: string;
        autoFormat?: false | true;
      },
      undefined | number,
      undefined | number,
      undefined | string,
      undefined | false | true
    ];
  } | {
    type: 'finance.creditCardNumber';
    count?: number;
    params?: [
      undefined | string | {
        issuer?: string;
      }
    ];
  } | {
    type: 'finance.pin';
    count?: number;
    params?: [
      undefined | number | {
        length?: number;
      }
    ];
  } | {
    type: 'finance.iban';
    count?: number;
    params?: [
      undefined | false | true | {
        formatted?: false | true;
        countryCode?: string;
      },
      undefined | string
    ];
  } | {
    type: 'finance.bic';
    count?: number;
    params?: [
      undefined | {
        includeBranchCode?: false | true;
      }
    ];
  } | {
    type: 'internet.color';
    count?: number;
    params?: [
      undefined | number | {
        redBase?: number;
        greenBase?: number;
        blueBase?: number;
      },
      undefined | number,
      undefined | number
    ];
  } | {
    type: 'internet.email';
    count?: number;
    params?: [
      undefined | string | {
        firstName?: string;
        lastName?: string;
        provider?: string;
        allowSpecialCharacters?: false | true;
      },
      undefined | string,
      undefined | string,
      undefined | {
        allowSpecialCharacters?: false | true;
      }
    ];
  } | {
    type: 'internet.exampleEmail';
    count?: number;
    params?: [
      undefined | string | {
        firstName?: string;
        lastName?: string;
        allowSpecialCharacters?: false | true;
      },
      undefined | string,
      undefined | {
        allowSpecialCharacters?: false | true;
      }
    ];
  } | {
    type: 'internet.userName';
    count?: number;
    params?: [
      undefined | string | {
        firstName?: string;
        lastName?: string;
      },
      undefined | string
    ];
  } | {
    type: 'internet.displayName';
    count?: number;
    params?: [
      undefined | string | {
        firstName?: string;
        lastName?: string;
      },
      undefined | string
    ];
  } | {
    type: 'internet.httpStatusCode';
    count?: number;
    params?: [
      undefined | {
        types?: Array<
          any | any | any | any | any
        >;
      }
    ];
  } | {
    type: 'internet.url';
    count?: number;
    params?: [
      undefined | {
        appendSlash?: false | true;
        protocol?: 'http' | 'https';
      }
    ];
  } | {
    type: 'internet.mac';
    count?: number;
    params?: [
      undefined | string | {
        separator?: string;
      }
    ];
  } | {
    type: 'internet.password';
    count?: number;
    params?: [
      undefined | number | {
        length?: number;
        memorable?: false | true;
        pattern?: any;
        prefix?: string;
      },
      undefined | false | true,
      undefined | any,
      undefined | string
    ];
  } | {
    type: 'internet.emoji';
    count?: number;
    params?: [
      undefined | {
        types?: Array<
          any | any | any | any | any | any | any | any | any | any
        >;
      }
    ];
  } | {
    type: 'location.zipCode';
    count?: number;
    params?: [
      undefined | string | {
        state?: string;
        format?: string;
      }
    ];
  } | {
    type: 'location.zipCodeByState';
    count?: number;
    params?: [
      undefined | string | {
        state?: string;
      }
    ];
  } | {
    type: 'location.streetAddress';
    count?: number;
    params?: [
      undefined | false | true | {
        useFullAddress?: false | true;
      }
    ];
  } | {
    type: 'location.countryCode';
    count?: number;
    params?: [
      undefined | 'alpha-2' | 'alpha-3' | {
        variant?: 'alpha-2' | 'alpha-3';
      }
    ];
  } | {
    type: 'location.state';
    count?: number;
    params?: [
      undefined | {
        abbreviated?: false | true;
      }
    ];
  } | {
    type: 'location.latitude';
    count?: number;
    params?: [
      number | {
        max?: number;
        min?: number;
        precision?: number;
      },
      undefined | number,
      undefined | number
    ];
  } | {
    type: 'location.longitude';
    count?: number;
    params?: [
      undefined | number | {
        max?: number;
        min?: number;
        precision?: number;
      },
      undefined | number,
      undefined | number
    ];
  } | {
    type: 'location.direction';
    count?: number;
    params?: [
      undefined | false | true | {
        abbreviated?: false | true;
      }
    ];
  } | {
    type: 'location.cardinalDirection';
    count?: number;
    params?: [
      undefined | false | true | {
        abbreviated?: false | true;
      }
    ];
  } | {
    type: 'location.ordinalDirection';
    count?: number;
    params?: [
      undefined | false | true | {
        abbreviated?: false | true;
      }
    ];
  } | {
    type: 'location.nearbyGPSCoordinate';
    count?: number;
    params?: [
      undefined | [
        number,
        number
      ] | {
        origin?: [
          number,
          number
        ];
        radius?: number;
        isMetric?: false | true;
      },
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'lorem.word';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'lorem.words';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'lorem.sentence';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'lorem.slug';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'lorem.sentences';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      },
      undefined | string
    ];
  } | {
    type: 'lorem.paragraph';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'lorem.paragraphs';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      },
      undefined | string
    ];
  } | {
    type: 'lorem.lines';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'person.firstName';
    count?: number;
    params?: [
      undefined | 'female' | 'male'
    ];
  } | {
    type: 'person.lastName';
    count?: number;
    params?: [
      undefined | 'female' | 'male'
    ];
  } | {
    type: 'person.middleName';
    count?: number;
    params?: [
      undefined | 'female' | 'male'
    ];
  } | {
    type: 'person.fullName';
    count?: number;
    params?: [
      undefined | {
        firstName?: string;
        lastName?: string;
        sex?: 'female' | 'male';
      }
    ];
  } | {
    type: 'person.prefix';
    count?: number;
    params?: [
      undefined | 'female' | 'male'
    ];
  } | {
    type: 'system.fileName';
    count?: number;
    params?: [
      undefined | {
        extensionCount?: number | {
          min: number;
          max: number;
        };
      }
    ];
  } | {
    type: 'system.commonFileName';
    count?: number;
    params?: [
      undefined | string
    ];
  } | {
    type: 'system.fileExt';
    count?: number;
    params?: [
      undefined | string
    ];
  } | {
    type: 'system.networkInterface';
    count?: number;
    params?: [
      undefined | {
        interfaceType?: 'en' | 'wl' | 'ww';
        interfaceSchema?: 'mac' | 'index' | 'slot' | 'pci';
      }
    ];
  } | {
    type: 'system.cron';
    count?: number;
    params?: [
      undefined | {
        includeYear?: false | true;
        includeNonStandard?: false | true;
      }
    ];
  } | {
    type: 'word.sample';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'word.adjective';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'word.noun';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'word.verb';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'word.words';
    count?: number;
    params?: [
      undefined | number | {
        count?: number | {
          min: number;
          max: number;
        };
      }
    ];
  } | {
    type: 'word.adverb';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'word.conjunction';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'word.interjection';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'word.preposition';
    count?: number;
    params?: [
      undefined | number | {
        length?: number | {
          min: number;
          max: number;
        };
        strategy?: 'fail' | 'closest' | 'shortest' | 'longest' | 'any-length';
      }
    ];
  } | {
    type: 'random.alpha';
    count?: number;
    params?: [
      undefined | number | {
        count?: number;
        casing?: 'upper' | 'lower' | 'mixed';
        bannedChars?: string | Array<
          any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any
        >;
      }
    ];
  } | {
    type: 'random.numeric';
    count?: number;
    params?: [
      undefined | number,
      undefined | {
        allowLeadingZeros?: false | true;
        bannedDigits?: string | Array<
          any | any | any | any | any | any | any | any | any | any | any
        >;
      }
    ];
  } | {
    type: 'random.words';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'random.alphaNumeric';
    count?: number;
    params?: [
      undefined | number,
      undefined | {
        casing?: 'upper' | 'lower' | 'mixed';
        bannedChars?: string | Array<
          any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any | any
        >;
      }
    ];
  } | {
    type: 'mockingbird.datetimeBetween';
    count?: number;
    params?: [
      {
        start: string | number | any;
        end: string | number | any;
      }
    ];
  } | {
    type: 'mockingbird.pickType';
    count?: number;
    params?: [
      {
        type: 'string' | 'number' | 'boolean' | 'float' | 'datetime' | 'uuid' | 'hexadecimal' | 'json' | 'array' | 'bigInt';
        length: number;
      },
      undefined | {
        state: {
          [index: string]: unknown;
        };
      }
    ];
  } | {
    type: 'mockingbird.pick';
    count?: number;
    params?: [
      {
        values: unknown[];
        distribution?: 'random' | 'normal';
      }
    ];
  } | {
    type: 'mockingbird.pickWeighted';
    count?: number;
    params?: [
      {
        values: unknown[];
        weights: number[];
      }
    ];
  } | {
    type: 'mockingbird.sequentialArray';
    count?: number;
    params?: [
      {
        values: unknown[];
        iterations?: number;
      },
      undefined | {
        state: {
          [index: string]: unknown;
        };
      }
    ];
  } | {
    type: 'datatype.hexadecimal';
    count?: number;
    params?: [
      undefined | {
        length?: number;
        prefix?: string;
        case?: 'upper' | 'lower' | 'mixed';
      }
    ];
  } | {
    type: 'datatype.float';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
        precision?: number;
      }
    ];
  } | {
    type: 'datatype.bigInt';
    count?: number;
    params?: [
      undefined | string | number | any | false | true | {
        min?: string | number | any | false | true;
        max?: string | number | any | false | true;
      }
    ];
  } | {
    type: 'datatype.string';
    count?: number;
    params?: [
      undefined | number | {
        length?: number;
      }
    ];
  } | {
    type: 'datatype.number';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
        precision?: number;
      }
    ];
  } | {
    type: 'datatype.boolean';
    count?: number;
    params?: [
      undefined | number | {
        probability?: number;
      }
    ];
  } | {
    type: 'datatype.datetime';
    count?: number;
    params?: [
      undefined | number | {
        min?: number;
        max?: number;
      }
    ];
  } | {
    type: 'datatype.array';
    count?: number;
    params?: [
      undefined | number | {
        min: number;
        max: number;
      }
    ];
  } | {
    type: 'git.commitEntry';
    count?: number;
    params?: [
      undefined | {
        merge?: false | true;
        eol?: 'LF' | 'CRLF';
        refDate?: string | number | any;
      }
    ];
  } | {
    type: 'git.commitDate';
    count?: number;
    params?: [
      undefined | {
        refDate?: string | number | any;
      }
    ];
  } | {
    type: 'git.commitSha';
    count?: number;
    params?: [
      undefined | {
        length?: number;
      }
    ];
  } | {
    type: 'image.url';
    count?: number;
    params?: [
      undefined | {
        width?: number;
        height?: number;
      }
    ];
  } | {
    type: 'image.city';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.image';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.imageUrl';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string,
      undefined | false | true
    ];
  } | {
    type: 'image.food';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.people';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.nature';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.unsplash.image';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string
    ];
  } | {
    type: 'image.unsplash.imageUrl';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string,
      undefined | string
    ];
  } | {
    type: 'image.unsplash.food';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string
    ];
  } | {
    type: 'image.unsplash.people';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string
    ];
  } | {
    type: 'image.unsplash.nature';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string
    ];
  } | {
    type: 'image.unsplash.technology';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string
    ];
  } | {
    type: 'image.unsplash.objects';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string
    ];
  } | {
    type: 'image.unsplash.buildings';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string
    ];
  } | {
    type: 'image.lorempicsum.image';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true,
      undefined | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10
    ];
  } | {
    type: 'image.lorempicsum.imageUrl';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true,
      undefined | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10,
      undefined | string
    ];
  } | {
    type: 'image.lorempicsum.imageGrayscale';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.lorempicsum.imageBlurred';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10
    ];
  } | {
    type: 'image.lorempicsum.imageRandomSeeded';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true,
      undefined | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10,
      undefined | string
    ];
  } | {
    type: 'image.placeholder.imageUrl';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | string,
      undefined | 'png' | 'jpeg' | 'jpg' | 'gif' | 'webp',
      undefined | string,
      undefined | string
    ];
  } | {
    type: 'image.placeholder.randomUrl';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | 'png' | 'jpeg' | 'jpg' | 'gif' | 'webp'
    ];
  } | {
    type: 'image.urlLoremFlickr';
    count?: number;
    params?: [
      undefined | {
        width?: number;
        height?: number;
        category?: string;
      }
    ];
  } | {
    type: 'image.urlPicsumPhotos';
    count?: number;
    params?: [
      undefined | {
        width?: number;
        height?: number;
        grayscale?: false | true;
        blur?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
      }
    ];
  } | {
    type: 'image.urlPlaceholder';
    count?: number;
    params?: [
      undefined | {
        width?: number;
        height?: number;
        backgroundColor?: string;
        textColor?: string;
        format?: 'png' | 'jpeg' | 'jpg' | 'gif' | 'webp';
        text?: string;
      }
    ];
  } | {
    type: 'image.dataUri';
    count?: number;
    params?: [
      undefined | {
        width?: number;
        height?: number;
        color?: string;
      }
    ];
  } | {
    type: 'image.abstract';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.animals';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.business';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.cats';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.nightlife';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.fashion';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.sports';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.technics';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'image.transport';
    count?: number;
    params?: [
      undefined | number,
      undefined | number,
      undefined | false | true
    ];
  } | {
    type: 'phone.number';
    count?: number;
    params?: [
      undefined | string
    ];
  };
}