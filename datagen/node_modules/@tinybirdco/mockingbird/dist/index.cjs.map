{"version":3,"sources":["../src/index.ts","../src/presetSchemas.ts","../src/generators/AWSSNSGenerator.ts","../src/generators/BaseGenerator.ts","../src/extendedFaker.ts","../src/types.ts","../src/generators/AblyGenerator.ts","../src/generators/ConfluentCloudKafkaGenerator.ts","../src/generators/LogGenerator.ts","../src/generators/RabbitMQGenerator.ts","../src/generators/TinybirdGenerator.ts","../src/generators/UpstashKafkaGenerator.ts"],"sourcesContent":["export { default as presetSchemas } from \"./presetSchemas\";\nexport * from \"./generators\";\nexport * from \"./types\";\n","import { PresetSchemaName, Schema } from \"./types\";\n\nconst presetSchemas: Record<PresetSchemaName, Schema> = {\n  \"Simple Example\": {\n    some_int: {\n      type: \"number.int\",\n    },\n    some_values: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [123, 456],\n        },\n      ],\n    },\n    values_weighted: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [123, 456, 789],\n          weights: [90, 7, 3],\n        },\n      ],\n    },\n  },\n  \"eCommerce Transactions\": {\n    timestamp: {\n      type: \"mockingbird.timestampNow\",\n    },\n    store_id: {\n      type: \"number.int\",\n      params: [\n        {\n          min: 1,\n          max: 6,\n        },\n      ],\n    },\n    browser: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [\"Chrome\", \"Brave\", \"Firefox\", \"Safari\"],\n          weights: [65, 3, 8, 20],\n        },\n      ],\n    },\n    product_id: {\n      type: \"number.int\",\n      params: [\n        {\n          min: 3278123,\n          max: 3378123,\n        },\n      ],\n    },\n    promo: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [0, 1],\n          weights: [19, 1],\n        },\n      ],\n    },\n    sales: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [1, 2, 3, 4],\n          weights: [50, 5, 2, 1],\n        },\n      ],\n    },\n    utm_source: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [\"instagram\", \"newsletter\", \"tiktok\", \"search_engine\"],\n          weights: [65, 13, 18, 20],\n        },\n      ],\n    },\n  },\n  \"Stock Prices\": {\n    amount: {\n      type: \"number.float\",\n    },\n    date: {\n      type: \"mockingbird.datetimeNow\",\n    },\n    stock_symbol: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\n            \"ABF:XLON\",\n            \"ADS:XETR\",\n            \"APG:XNYS\",\n            \"APPS:XMAD\",\n            \"BLNK:XNAS\",\n            \"BNZL:XLON\",\n            \"CGNX:XNAS\",\n            \"COHR:XNAS\",\n            \"DBX:XNAS\",\n            \"DECK:XNYS\",\n            \"DNN:XNYS\",\n            \"DOM:XMAD\",\n            \"DV:XNYS\",\n            \"EDP:XLIS\",\n            \"EIX:XNYS\",\n            \"GFC:XPAR\",\n            \"GRE:XMAD\",\n            \"INO:XNAS\",\n            \"LFG:XNYS\",\n            \"LIN:XNYS\",\n            \"LOGN:XSWX\",\n            \"MAC:XNYS\",\n            \"MAT:XNAS\",\n            \"NMTR:XNAS\",\n            \"NSC:XNYS\",\n            \"PACW:XNAS\",\n            \"RGA:XNYS\",\n            \"SDR:XLON\",\n            \"SGO:XPAR\",\n            \"TMO:XNYS\",\n            \"TRE:XMAD\",\n            \"TRIP:XNAS\",\n            \"TRV:XNYS\",\n            \"WB:XNAS\",\n            \"ZTO:XNYS\",\n          ],\n        },\n      ],\n    },\n  },\n  \"Flight Bookings\": {\n    timestamp: {\n      type: \"mockingbird.timestampNow\",\n    },\n    transaction_id: {\n      type: \"string.uuid\",\n    },\n    name: {\n      type: \"person.fullName\",\n    },\n    email: {\n      type: \"internet.email\",\n    },\n    age: {\n      type: \"number.int\",\n      params: [\n        {\n          min: 18,\n          max: 99,\n        },\n      ],\n    },\n    passport_number: {\n      type: \"number.int\",\n      params: [\n        {\n          min: 3456789,\n          max: 9876543,\n        },\n      ],\n    },\n    flight_from: {\n      type: \"location.cityName\",\n    },\n    flight_to: {\n      type: \"location.cityName\",\n    },\n    extra_bags: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n          weights: [45, 35, 10, 4, 2, 1, 1, 1, 1],\n        },\n      ],\n    },\n    priority_boarding: {\n      type: \"datatype.boolean\",\n    },\n    meal_choice: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [\"none\", \"vegan\", \"vegetarian\", \"halal\", \"kosher\", \"gluten\"],\n          weights: [60, 5, 10, 10, 10, 5],\n        },\n      ],\n    },\n    airline: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [\n            \"BrianAir\",\n            \"Fizz\",\n            \"EasyPlane\",\n            \"Skittish Airways\",\n            \"GAS\",\n            \"Ler Dingus\",\n            \"Red Balloon\",\n          ],\n          weights: [20, 5, 15, 20, 15, 10, 15],\n        },\n      ],\n    },\n  },\n  \"Content Tracking\": {\n    timestamp: {\n      type: \"mockingbird.timestampNow\",\n    },\n    userId: {\n      type: \"string.uuid\",\n    },\n    contentId: {\n      type: \"number.int\",\n      params: [\n        {\n          min: 12345,\n          max: 36923,\n        },\n      ],\n    },\n    eventType: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [\n            \"click\",\n            \"view more\",\n            \"preview\",\n            \"borrow\",\n            \"place a hold\",\n            \"share\",\n            \"add to favorites\",\n            \"add to list\",\n          ],\n          weights: [60, 12, 33, 21, 20, 2, 5, 6],\n        },\n      ],\n    },\n    institutionID: {\n      type: \"number.int\",\n      params: [\n        {\n          min: 123,\n          max: 369,\n        },\n      ],\n    },\n  },\n  \"Web Analytics Starter Kit\": {\n    timestamp: {\n      type: \"mockingbird.timestampNow\",\n    },\n    session_id: {\n      type: \"string.uuid\",\n    },\n    action: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"page_hit\"],\n        },\n      ],\n    },\n    version: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"1\"],\n        },\n      ],\n    },\n    payload: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\n            '{ \"user-agent\":\"Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.79 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\", \"locale\":\"en-US\", \"referrer\":\"https://www.kike.io\", \"pathname\":\"/blog-posts/data-market-whitebox-replaces-4-data-stack-tools-with-tinybird\", \"href\":\"https://www.tinybird.co/blog-posts/data-market-whitebox-replaces-4-data-stack-tools-with-tinybird\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; Googlebot/2.1; +http://www.google.com/bot.html) Chrome/104.0.5112.79 Safari/537.36\", \"locale\":\"en-US\", ocation\":\"IT\", \"referrer\":\"https://www.hn.com\", \"pathname\":\"/guide/fine-tuning-csvs-for-fast-ingestion\", \"href\":\"https://www.tinybird.co/guide/fine-tuning-csvs-for-fast-ingestion\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:103.0) Gecko/20100101 Firefox/103.0\", \"locale\":\"en-GB\", \"location\":\"ES\", \"referrer\":\"\", \"pathname\":\"/\", \"href\":\"https://www.tinybird.co\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:103.0) Gecko/20100101 Firefox/103.0\", \"locale\":\"en-US\", \"location\":\"US\", \"referrer\":\"https://www.google.com\", \"pathname\":\"/\", \"href\":\"https://www.tinybird.co\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.102 Safari/537.36\", \"locale\":\"en-US\", \"location\":\"US\", \"referrer\":\"https://www.tinybird.co/why-tinybird\", \"pathname\":\"/pricing\", \"href\":\"https://www.tinybird.co/pricing\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.102 Safari/537.36\", \"locale\":\"en-US\", \"location\":\"US\", \"referrer\":\"https://www.google.com\", \"pathname\":\"/product\", \"href\":\"https://www.tinybird.co/product\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\", \"locale\":\"en-US\", \"location\":\"IL\", \"referrer\":\"https://www.google.com\", \"pathname\":\"/blog-posts/tips-5-adding-and-subtracting-intervals\", \"href\":\"https://www.tinybird.co/blog-posts/tips-5-adding-and-subtracting-intervals\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\", \"locale\":\"es-ES\", \"location\":\"ES\", \"referrer\":\"https://www.twitter.com\", \"pathname\":\"/\", \"href\":\"https://www.tinybird.co\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\", \"locale\":\"en-US\", \"location\":\"GB\", \"referrer\":\"https://www.facebook.com\", \"pathname\":\"/\", \"href\":\"https://www.tinybird.co\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\", \"locale\":\"en-US\", \"location\":\"CH\", \"referrer\":\"https://www.qq.ch\", \"pathname\":\"guides\", \"href\":\"https://www.tinybird.co/guides\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Linux; Android 13) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.118 Mobile Safari/537.36\", \"locale\":\"en-US\", \"location\":\"US\", \"referrer\":\"https://www.yandex.com\", \"pathname\":\"/product\", \"href\":\"https://www.tinybird.co/product\"}',\n            '{ \"user-agent\":\"Mozilla/5.0 (Linux; Android 13; SM-A102U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.118 Mobile Safari/537.36\", \"locale\":\"en-US\", \"location\":\"FR\", \"referrer\":\"https://www.github.com\", \"pathname\":\"/pricing\", \"href\":\"https://www.tinybird.co/pricing\"}',\n          ],\n        },\n      ],\n    },\n  },\n  \"Log Analytics Starter Kit\": {\n    acceptcharset: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    acceptencoding: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"deflate, gzip\", \"gzip, deflate, br\", \"gzip\"],\n        },\n      ],\n    },\n    acceptlanguage: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"en-GB,en-US;q=0.9,en;q=0.8\", \"unknown\"],\n        },\n      ],\n    },\n    browsername: {\n      type: \"mockingbird.browserName\",\n    },\n    browserversion: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"107.0\", \"107.0.0.0\", \"86.0.4240.80\"],\n        },\n      ],\n    },\n    cachecontrol: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"max-age=0\", \"unknown\", \"no-cache\"],\n        },\n      ],\n    },\n    city: {\n      type: \"location.cityName\",\n    },\n    connection: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"Keep-Alive\"],\n        },\n      ],\n    },\n    contentlength: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    contenttype: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    country: {\n      type: \"location.countryCode\",\n      params: [\"alpha-2\"],\n    },\n    cpuarchitecture: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\", \"amd64\"],\n        },\n      ],\n    },\n    devicemodel: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    devicetype: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    devicevendor: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    enginename: {\n      type: \"mockingbird.browserEngineName\",\n    },\n    engineversion: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"107.0\", \"107.0.0.0\", \"86.0.4240.80\"],\n        },\n      ],\n    },\n    event_ts: {\n      type: \"mockingbird.timestampNow\",\n    },\n    from: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    headers: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\n            \"accept,accept-encoding,connection,host,user-agent,x-forwarded-for,x-forwarded-host,x-forwarded-proto,x-real-ip,x-vercel-edge-region,x-vercel-id,x-vercel-ip-city,x-vercel-ip-country,x-vercel-ip-country-region,x-vercel-ip-latitude,x-vercel-ip-longitude,x-vercel-ip-timezone,x-vercel-proxied-for\",\n            \"accept,accept-encoding,accept-language,cache-control,connection,host,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform,sec-fetch-dest,sec-fetch-mode,sec-fetch-site,sec-fetch-user,upgrade-insecure-requests,user-agent,x-forwarded-for,x-forwarded-host,x-forwarded-proto,x-real-ip,x-vercel-edge-region,x-vercel-id,x-vercel-ip-city,x-vercel-ip-country,x-vercel-ip-country-region,x-vercel-ip-latitude,x-vercel-ip-longitude,x-vercel-ip-timezone,x-vercel-proxied-for\",\n            \"accept,accept-encoding,accept-language,connection,host,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform,sec-fetch-dest,sec-fetch-mode,sec-fetch-site,sec-fetch-user,upgrade-insecure-requests,user-agent,x-forwarded-for,x-forwarded-host,x-forwarded-proto,x-real-ip,x-vercel-edge-region,x-vercel-id,x-vercel-ip-city,x-vercel-ip-country,x-vercel-ip-country-region,x-vercel-ip-latitude,x-vercel-ip-longitude,x-vercel-ip-timezone,x-vercel-proxied-for\",\n          ],\n        },\n      ],\n    },\n    host: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"https://log-analytics.tinybird.co\"],\n        },\n      ],\n    },\n    ip_address: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\n            \"131.193.63.35\",\n            \"136.51.218.209\",\n            \"114.199.206.246\",\n            \"5.56.231.189\",\n            \"63.186.41.153\",\n            \"88.192.158.134\",\n            \"223.101.73.170\",\n            \"61.35.129.108\",\n            \"132.224.105.232\",\n            \"125.229.8.125\",\n            \"35.116.15.55\",\n            \"135.103.19.171\",\n            \"12.234.10.230\",\n            \"244.50.216.166\",\n            \"92.106.31.254\",\n            \"164.172.162.6\",\n            \"169.139.2.145\",\n            \"187.104.128.230\",\n            \"146.231.248.20\",\n            \"73.37.121.172\",\n            \"46.233.101.221\",\n            \"38.139.152.20\",\n            \"221.132.91.129\",\n            \"242.221.17.93\",\n            \"212.39.236.181\",\n            \"150.147.164.150\",\n            \"19.235.215.252\",\n            \"33.70.179.57\",\n            \"0.199.1.195\",\n            \"241.248.60.81\",\n            \"87.89.154.186\",\n            \"0.205.245.230\",\n            \"191.101.56.147\",\n            \"142.244.241.167\",\n            \"221.73.118.23\",\n            \"137.116.138.105\",\n            \"193.57.80.248\",\n            \"7.138.8.8\",\n            \"19.190.78.24\",\n            \"247.5.181.70\",\n            \"67.67.187.20\",\n            \"2.174.213.137\",\n            \"154.48.101.180\",\n            \"75.173.26.25\",\n            \"84.72.65.209\",\n            \"41.227.234.157\",\n            \"82.158.16.245\",\n            \"159.113.221.220\",\n            \"155.212.16.126\",\n            \"217.237.64.201\",\n            \"214.199.246.230\",\n            \"20.235.163.219\",\n            \"107.137.129.13\",\n            \"206.182.165.24\",\n            \"232.177.172.195\",\n            \"188.218.192.103\",\n            \"111.200.211.74\",\n            \"159.174.148.204\",\n            \"194.46.159.208\",\n            \"96.27.126.107\",\n            \"92.194.105.174\",\n            \"9.79.157.249\",\n            \"215.97.251.180\",\n            \"188.146.152.7\",\n            \"13.146.15.73\",\n            \"200.62.24.238\",\n            \"26.229.48.75\",\n            \"113.56.136.232\",\n            \"165.45.202.122\",\n            \"112.81.47.101\",\n            \"158.109.206.235\",\n            \"118.49.62.165\",\n            \"158.248.78.235\",\n            \"166.181.249.157\",\n            \"54.154.19.54\",\n            \"231.253.232.206\",\n            \"18.29.56.81\",\n            \"172.16.60.94\",\n            \"55.225.63.165\",\n            \"85.219.165.210\",\n            \"216.78.134.3\",\n            \"192.65.52.162\",\n            \"130.106.168.81\",\n            \"238.121.229.154\",\n            \"208.217.159.180\",\n            \"46.38.34.68\",\n            \"59.236.49.50\",\n            \"14.2.127.20\",\n            \"111.198.231.103\",\n            \"143.189.199.178\",\n            \"6.7.246.74\",\n            \"201.43.78.217\",\n            \"49.106.69.76\",\n            \"194.89.12.52\",\n            \"142.159.132.142\",\n            \"97.131.215.242\",\n            \"111.128.5.86\",\n            \"115.243.65.248\",\n            \"198.205.143.144\",\n            \"89.219.76.53\",\n          ],\n        },\n      ],\n    },\n    isbot: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [0],\n        },\n      ],\n    },\n    latitude: {\n      type: \"location.latitude\",\n    },\n    log_level: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [\"INFO\", \"WARN\", \"ERROR\"],\n          weights: [85, 12, 3],\n        },\n      ],\n    },\n    log_message: {\n      type: \"random.words\",\n      params: [10],\n    },\n    longitude: {\n      type: \"location.longitude\",\n    },\n    method: {\n      type: \"internet.httpMethod\",\n    },\n    origin: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    osname: {\n      type: \"mockingbird.osName\",\n    },\n    osversion: {\n      type: \"system.semver\",\n    },\n    protocol: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"https\"],\n        },\n      ],\n    },\n    referer: {\n      type: \"mockingbird.searchEngineName\",\n    },\n    region: {\n      type: \"location.countryCode\",\n      params: [\"alpha-3\"],\n    },\n    url: {\n      type: \"mockingbird.pickWeighted\",\n      params: [\n        {\n          values: [\n            \"https://log-analytics.tinybird.co/api/dummy/item\",\n            \"https://log-analytics.tinybird.co/api/dummy/search\",\n            \"https://log-analytics.tinybird.co/api/dummy/checkout\",\n            \"https://log-analytics.tinybird.co/api/dummy/login\",\n            \"https://log-analytics.tinybird.co/api/dummy/register\",\n            \"https://log-analytics.tinybird.co/api/dummy/secretAPI\",\n          ],\n          weights: [40, 30, 10, 5, 5, 10],\n        },\n      ],\n    },\n    useragent: {\n      type: \"internet.userAgent\",\n    },\n    via: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\"unknown\"],\n        },\n      ],\n    },\n    xforwaredforip: {\n      type: \"mockingbird.pick\",\n      params: [\n        {\n          values: [\n            \"131.193.63.35\",\n            \"136.51.218.209\",\n            \"114.199.206.246\",\n            \"5.56.231.189\",\n            \"63.186.41.153\",\n            \"88.192.158.134\",\n            \"223.101.73.170\",\n            \"61.35.129.108\",\n            \"132.224.105.232\",\n            \"125.229.8.125\",\n            \"35.116.15.55\",\n            \"135.103.19.171\",\n            \"12.234.10.230\",\n            \"244.50.216.166\",\n            \"92.106.31.254\",\n            \"164.172.162.6\",\n            \"169.139.2.145\",\n            \"187.104.128.230\",\n            \"146.231.248.20\",\n            \"73.37.121.172\",\n            \"46.233.101.221\",\n            \"38.139.152.20\",\n            \"221.132.91.129\",\n            \"242.221.17.93\",\n            \"212.39.236.181\",\n            \"150.147.164.150\",\n            \"19.235.215.252\",\n            \"33.70.179.57\",\n            \"0.199.1.195\",\n            \"241.248.60.81\",\n            \"87.89.154.186\",\n            \"0.205.245.230\",\n            \"191.101.56.147\",\n            \"142.244.241.167\",\n            \"221.73.118.23\",\n            \"137.116.138.105\",\n            \"193.57.80.248\",\n            \"7.138.8.8\",\n            \"19.190.78.24\",\n            \"247.5.181.70\",\n            \"67.67.187.20\",\n            \"2.174.213.137\",\n            \"154.48.101.180\",\n            \"75.173.26.25\",\n            \"84.72.65.209\",\n            \"41.227.234.157\",\n            \"82.158.16.245\",\n            \"159.113.221.220\",\n            \"155.212.16.126\",\n            \"217.237.64.201\",\n            \"214.199.246.230\",\n            \"20.235.163.219\",\n            \"107.137.129.13\",\n            \"206.182.165.24\",\n            \"232.177.172.195\",\n            \"188.218.192.103\",\n            \"111.200.211.74\",\n            \"159.174.148.204\",\n            \"194.46.159.208\",\n            \"96.27.126.107\",\n            \"92.194.105.174\",\n            \"9.79.157.249\",\n            \"215.97.251.180\",\n            \"188.146.152.7\",\n            \"13.146.15.73\",\n            \"200.62.24.238\",\n            \"26.229.48.75\",\n            \"113.56.136.232\",\n            \"165.45.202.122\",\n            \"112.81.47.101\",\n            \"158.109.206.235\",\n            \"118.49.62.165\",\n            \"158.248.78.235\",\n            \"166.181.249.157\",\n            \"54.154.19.54\",\n            \"231.253.232.206\",\n            \"18.29.56.81\",\n            \"172.16.60.94\",\n            \"55.225.63.165\",\n            \"85.219.165.210\",\n            \"216.78.134.3\",\n            \"192.65.52.162\",\n            \"130.106.168.81\",\n            \"238.121.229.154\",\n            \"208.217.159.180\",\n            \"46.38.34.68\",\n            \"59.236.49.50\",\n            \"14.2.127.20\",\n            \"111.198.231.103\",\n            \"143.189.199.178\",\n            \"6.7.246.74\",\n            \"201.43.78.217\",\n            \"49.106.69.76\",\n            \"194.89.12.52\",\n            \"142.159.132.142\",\n            \"97.131.215.242\",\n            \"111.128.5.86\",\n            \"115.243.65.248\",\n            \"198.205.143.144\",\n            \"89.219.76.53\",\n          ],\n        },\n      ],\n    },\n  },\n};\n\nexport default presetSchemas;\n","import { PublishCommand, SNSClient } from \"@aws-sdk/client-sns\";\nimport { z } from \"zod\";\n\nimport { Row } from \"../types\";\nimport BaseGenerator, { baseConfigSchema } from \"./BaseGenerator\";\n\nconst awsSNSConfigSchema = baseConfigSchema.merge(\n  z.object({\n    region: z.string(),\n    accessKeyId: z.string(),\n    secretAccessKey: z.string(),\n    topicArn: z.string(),\n    subject: z.string().optional(),\n    snsOptions: z.any().optional(),\n  })\n);\n\nexport type AWSSNSConfig = z.infer<typeof awsSNSConfigSchema>;\n\nexport default class AWSSNSGenerator extends BaseGenerator<AWSSNSConfig> {\n  readonly client: SNSClient;\n\n  constructor(config: AWSSNSConfig) {\n    super(awsSNSConfigSchema.parse(config));\n\n    this.client = new SNSClient({\n      ...this.config.snsOptions,\n      region: this.config.region,\n      credentials: {\n        accessKeyId: this.config.accessKeyId,\n        secretAccessKey: this.config.secretAccessKey,\n      },\n    });\n  }\n\n  async sendData(rows: Row[]): Promise<void> {\n    await Promise.all(\n      rows.map((row) =>\n        this.client\n          .send(\n            new PublishCommand({\n              Message: JSON.stringify(row),\n              Subject: this.config.subject,\n              TopicArn: this.config.topicArn,\n            })\n          )\n          .then((data) => {\n            this.log(\"info\", `AWS SNS Response: ${JSON.stringify(data)}`);\n          })\n          .catch((err) => {\n            this.log(\"error\", `AWS SNS Error: ${JSON.stringify(err)}`);\n          })\n      )\n    );\n  }\n}\n","import _get from \"lodash.get\";\n\nimport { z } from \"zod\";\nimport extendedFaker from \"../extendedFaker\";\nimport { Row, Schema, validateSchema } from \"../types\";\n\nexport const schemaSchema = z.record(\n  z.object({\n    type: z.string(),\n    params: z.any().optional(),\n    count: z.number().optional(),\n  })\n);\n\nexport const baseConfigSchema = z.object({\n  schema: schemaSchema.refine((schemaSchema) =>\n    validateSchema(schemaSchema as Schema)\n  ),\n  eps: z.number().optional().default(1),\n  limit: z.number().optional().default(-1),\n  logs: z.boolean().default(false).optional(),\n});\n\nexport type BaseConfig = z.infer<typeof baseConfigSchema>;\n\nexport default abstract class BaseGenerator<C extends BaseConfig> {\n  config: C;\n\n  private state: Record<string, unknown> = {};\n\n  abstract sendData(data: Row[]): Promise<void>;\n\n  constructor(config: C) {\n    this.config = config;\n  }\n\n  log(level: \"info\" | \"error\", message: string) {\n    if (!this.config.logs) return;\n\n    if (level === \"info\") {\n      console.log(`INFO> ${message}`);\n    } else if (level === \"error\") {\n      console.error(console.log(`ERR > ${message}.`));\n    }\n  }\n\n  generateRow(): Row {\n    const generatedRow = Object.entries(this.config.schema).reduce(\n      (acc, [key, value]) => {\n        const generator = _get(extendedFaker, value.type),\n          params = value.params ?? [],\n          count = value.count ?? 1;\n\n        const generatedValues = new Array(count)\n          .fill(null)\n          .map(() => generator(...params, { state: this.state }));\n\n        return {\n          ...acc,\n          [key]: count === 1 ? generatedValues[0] : generatedValues,\n        };\n      },\n      {} as Record<string, unknown | unknown[]>\n    );\n\n    return generatedRow;\n  }\n\n  async generate(onMessage?: (data: Row[]) => void) {\n    const minDelayPerBatch = 200;\n    const maxBatchesPerSecond = 1000 / minDelayPerBatch;\n\n    let batchSize: number, delayPerBatch: number;\n    if (this.config.eps < 1000) {\n      batchSize = this.config.eps;\n      delayPerBatch = 1000;\n    } else {\n      batchSize = this.config.eps / maxBatchesPerSecond;\n      delayPerBatch = minDelayPerBatch;\n    }\n\n    const rows: Row[] = [];\n\n    let limit = this.config.limit,\n      sentRows = 0;\n\n    while (true) {\n      rows.push(this.generateRow());\n\n      if (rows.length >= batchSize) {\n        const data = rows.splice(0, batchSize);\n\n        try {\n          await this.sendData(data);\n          if (onMessage) onMessage(data);\n        } catch (e) {\n          this.log(\"error\", String(e));\n          break;\n        }\n\n        sentRows += data.length;\n\n        this.log(\"info\", `${sentRows} rows sent so far...`);\n\n        if (limit != -1 && sentRows >= limit) break;\n\n        await new Promise((r) => setTimeout(r, delayPerBatch));\n      }\n    }\n  }\n}\n","import { faker } from \"@faker-js/faker\";\n\nconst helpersModule = {\n  weightedRandom(items: unknown[], weights: number[]) {\n    return faker.helpers.weightedArrayElement(\n      new Array(items.length).fill(null).map((_, i) => ({\n        weight: weights[i],\n        value: items[i],\n      }))\n    );\n  },\n  normalDistribution( ) {\n    function boxMullerRandom():number {\n      let u = 0, v = 0;\n      while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n      while(v === 0) v = Math.random();\n      let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\n      num = num / 10.0 + 0.5; // Translate to 0 -> 1\n      if (num > 1 || num < 0) return boxMullerRandom() // resample between 0 and 1\n      return num\n    }\n\n    return boxMullerRandom();\n  },\n};\n\nconst mockingbirdModule = {\n  latitudeNumeric: () => faker.location.latitude(),\n  longitudeNumeric: () => faker.location.longitude(),\n  searchEngineName() {\n    const searchEngines = [\n      \"https://www.google.co.uk/\",\n      \"https://www.bing.com/\",\n      \"https://duckduckgo.com/\",\n      \"https://yandex.com/\",\n      \"https://yahoo.com\",\n    ];\n    return faker.helpers.arrayElement(searchEngines);\n  },\n  osName() {\n    const osNames = [\"Linux\", \"Windows\", \"Mac OS\"];\n    return faker.helpers.arrayElement(osNames);\n  },\n  browserName() {\n    const browserNames = [\"Chrome\", \"Firefox\", \"IE\", \"Opera\"];\n    return faker.helpers.arrayElement(browserNames);\n  },\n  browserEngineName() {\n    const browserEngineNames = [\"Blink\", \"Gecko\", \"Trident\"];\n    return faker.helpers.arrayElement(browserEngineNames);\n  },\n  datetimeNow: () => new Date().toISOString().slice(0, 19),\n  datetimeRecent: () => faker.date.recent().toISOString().slice(0, 19),\n  datetimeBetween: (params: {\n    start: string | number | Date;\n    end: string | number | Date;\n  }) =>\n    faker.date\n      .between({ from: params.start, to: params.end })\n      .toISOString()\n      .slice(0, 19),\n  timestampNow: () => new Date().toISOString(),\n  pickType: (\n    params: { type: keyof typeof faker.datatype; length: number },\n    opts: { state: Record<string, unknown> } | undefined\n  ) => {\n    if (!opts) return;\n    const state = opts.state;\n\n    const key = `pickType.${JSON.stringify({\n      type: params.type,\n      length: params.length,\n    })}`;\n\n    const arr =\n      (state[key] as Array<unknown>) ??\n      new Array(params.length || 1)\n        .fill(null)\n        .map(() => faker.datatype[params.type]());\n    const value = arr.shift();\n    state[key] = arr;\n    return value;\n  },\n  pick: (params: { values: unknown[]; distribution?: \"random\" | \"normal\" }) =>\n    params.values[\n      Math.floor(\n        (!params.distribution || params.distribution === \"random\"\n          ? Math.random()\n          : helpersModule.normalDistribution()) * params.values.length\n      )\n    ],\n  pickWeighted: (params: { values: unknown[]; weights: number[] }) =>\n    helpersModule.weightedRandom(params.values, params.weights),\n  sequentialArray: (\n    params: { values: unknown[]; iterations?: number },\n    opts: { state: Record<string, unknown> } | undefined\n  ) => {\n    if (!opts) return;\n    const state = opts.state;\n\n    const indexKey = `sequentialArray.${JSON.stringify(params.values)}.index`,\n      iterationKey = `sequentialArray.${JSON.stringify(\n        params.values\n      )}.iteration`;\n    let currentIndex = Number(state[indexKey] ?? 0),\n      currentIteration = Number(state[iterationKey] ?? 0);\n\n    if (currentIteration >= (params.iterations ?? 1)) {\n      currentIndex = (currentIndex + 1) % params.values.length;\n      currentIteration = 0;\n    }\n\n    const value = params.values[currentIndex];\n\n    state[indexKey] = currentIndex;\n    state[iterationKey] = currentIteration + 1;\n\n    return value;\n  },\n};\n\nconst extendedFaker = {\n  ...faker,\n  helpers: { ...faker.helpers, ...helpersModule },\n  mockingbird: mockingbirdModule,\n};\n\nexport default extendedFaker;\n","import _get from \"lodash.get\";\n\nimport extendedFaker from \"./extendedFaker\";\n\n/**\n * @description Generates all possible paths of an object\n * @example extendedFaker -> \"mockingbird.latitudeNumeric\" | ...\n */\ntype ObjectPath<T extends object, D extends string = \"\"> = {\n  [K in keyof T]: `${D}${Exclude<K, symbol>}${\n    | \"\"\n    | (T[K] extends object ? ObjectPath<T[K], \".\"> : \"\")}`;\n}[keyof T];\n\n/**\n * @description Gets the type of value at certain path of an object\n * @example \"mockingbird.latitudeNumeric\" => () => number\n */\ntype ObjectAtPath<\n  T,\n  Path extends string\n> = Path extends `${infer Key}.${infer Rest}`\n  ? Key extends keyof T\n    ? ObjectAtPath<T[Key], Rest>\n    : never\n  : Path extends keyof T\n  ? T[Path]\n  : never;\n\n/**\n * @description All actual faker functions, excluding utils\n */\nexport type FakerFunctions = Omit<\n  typeof extendedFaker,\n  \"helpers\" | \"locales\" | \"definitions\"\n>;\n\n/**\n * @description Returns an array of parameters of a function\n * () => number => []\n */\nexport type FakerFunctionParams<T> = T extends (...args: infer P) => any\n  ? P extends [...args: infer P, options: { state: Record<string, unknown> }]\n    ? P\n    : P\n  : never;\n\n/**\n * @description All possible paths (functions) of extendedFaker\n */\nexport type SchemaKey = Exclude<\n  ObjectPath<FakerFunctions>,\n  keyof typeof extendedFaker\n>;\n\n/**\n * @description All possible paths (functions) of extendedFaker that take parameters\n */\nexport type ParameterizedSchemaKey<K extends SchemaKey = SchemaKey> =\n  K extends SchemaKey\n    ? FakerFunctionParams<ObjectAtPath<FakerFunctions, K>> extends []\n      ? never\n      : K\n    : never;\n\n/**\n * @description All possible paths (functions) of extendedFaker that do not take parameters\n */\nexport type UnparameterizedSchemaKey = Exclude<\n  SchemaKey,\n  ParameterizedSchemaKey\n>;\n\n/**\n * @description All possible values of a schema,\n * if the key is does not take any parameters it gets reduced to UnparameterizedSchemaKey,\n * else it will return the actual key and the parameters\n */\nexport type SchemaValue<K extends SchemaKey = SchemaKey> =\n  K extends UnparameterizedSchemaKey\n    ? {\n        type: UnparameterizedSchemaKey;\n        count?: number;\n      }\n    : {\n        type: K;\n        count?: number;\n        params?: FakerFunctionParams<ObjectAtPath<FakerFunctions, K>>;\n      };\n\n/**\n * @description The schema object\n */\nexport type Schema = Record<string, SchemaValue>;\n\nexport const PRESET_SCHEMA_NAMES = [\n  \"Simple Example\",\n  \"eCommerce Transactions\",\n  \"Stock Prices\",\n  \"Flight Bookings\",\n  \"Content Tracking\",\n  \"Web Analytics Starter Kit\",\n  \"Log Analytics Starter Kit\",\n] as const;\nexport type PresetSchemaName = (typeof PRESET_SCHEMA_NAMES)[number];\n\nexport function validateSchema(schema: Schema) {\n  const errors = [] as string[];\n\n  for (const schemaItem of Object.values(schema)) {\n    const { type, count } = schemaItem;\n\n    if (typeof count !== \"undefined\" && count < 1)\n      errors.push(`${type}: Count must be greater than 0`);\n\n    if (\"params\" in schemaItem) {\n      const generator = _get(extendedFaker, type);\n\n      try {\n        // @ts-ignore\n        // @ts-nocheck\n        generator(...schemaItem.params);\n      } catch (e) {\n        errors.push(\n          `${type}: ${\n            e && typeof e === \"object\" && \"toString\" in e\n              ? e.toString()\n              : \"Unknown error\"\n          }`\n        );\n      }\n    }\n  }\n\n  return { valid: !errors.length, errors };\n}\n\nexport type Row = Record<string, unknown | unknown[]>;\n","import fetch from \"cross-fetch\";\nimport { z } from \"zod\";\n\nimport { Row } from \"../types\";\nimport BaseGenerator, { baseConfigSchema } from \"./BaseGenerator\";\n\nconst ablyConfigSchema = baseConfigSchema.merge(\n  z.object({\n    apiKey: z.string(),\n    channelId: z.string(),\n  })\n);\n\nexport type AblyConfig = z.infer<typeof ablyConfigSchema>;\n\nexport default class AblyGenerator extends BaseGenerator<AblyConfig> {\n  readonly token: string;\n\n  constructor(config: AblyConfig) {\n    super(ablyConfigSchema.parse(config));\n\n    this.token = Buffer.from(this.config.apiKey).toString(\"base64\");\n  }\n\n  async sendData(rows: Row[]): Promise<void> {\n    const url = new URL(\n      `https://rest.ably.io/channels/${this.config.channelId}/messages`\n    );\n\n    await fetch(url, {\n      headers: {\n        Authorization: `Basic ${this.token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        name: \"publish\",\n        data: rows,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (this.config.logs) {\n          this.log(\"info\", `Ably Response: ${JSON.stringify(res)}`);\n        }\n      })\n      .catch((err) => {\n        this.log(\"error\", `Ably Error: ${JSON.stringify(err)}`);\n      });\n  }\n}\n","import fetch from \"cross-fetch\";\nimport { z } from \"zod\";\n\nimport { Row } from \"../types\";\nimport BaseGenerator, { baseConfigSchema } from \"./BaseGenerator\";\n\nconst confluentCloudKafkaConfigSchema = baseConfigSchema.merge(\n  z.object({\n    restEndpoint: z.string().url(),\n    clusterId: z.string(),\n    topic: z.string(),\n    apiKey: z.string(),\n    apiSecret: z.string(),\n    headers: z.array(z.record(z.string())).optional(),\n    key: z\n      .object({\n        type: z.literal(\"BINARY\"),\n        data: z.string(),\n      })\n      .or(\n        z.object({\n          type: z.literal(\"JSON\"),\n          data: z.record(z.string()),\n        })\n      )\n      .optional(),\n  })\n);\n\nexport type ConfluentCloudKafkaConfig = z.infer<\n  typeof confluentCloudKafkaConfigSchema\n>;\n\nexport default class ConfluentCloudKafkaGenerator extends BaseGenerator<ConfluentCloudKafkaConfig> {\n  readonly token: string;\n\n  constructor(config: ConfluentCloudKafkaConfig) {\n    super(confluentCloudKafkaConfigSchema.parse(config));\n\n    this.token = Buffer.from(\n      `${this.config.apiKey}:${this.config.apiSecret}`\n    ).toString(\"base64\");\n  }\n\n  async sendData(rows: Row[]): Promise<void> {\n    const url = `${this.config.restEndpoint}/kafka/v3/clusters/${this.config.clusterId}/topics/${this.config.topic}/records`;\n\n    await Promise.all(\n      rows.map((row) =>\n        fetch(url, {\n          headers: {\n            Authorization: `Basic ${this.token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          method: \"POST\",\n          body: JSON.stringify({\n            headers: this.config.headers,\n            timestamp: new Date().toISOString(),\n            key: this.config.key,\n            value: {\n              type: \"JSON\",\n              data: row,\n            },\n          }),\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            if (res.error_code !== 200) {\n              throw new Error(res);\n            }\n\n            if (this.config.logs) {\n              this.log(\n                \"info\",\n                `Confluent Kafka Response: ${JSON.stringify(res)}`\n              );\n            }\n          })\n          .catch((err) => {\n            this.log(\"error\", `Confluent Kafka Error: ${JSON.stringify(err)}`);\n          })\n      )\n    );\n  }\n}\n","import { Row } from \"../types\";\nimport BaseGenerator, { BaseConfig, baseConfigSchema } from \"./BaseGenerator\";\n\nexport default class LogGenerator extends BaseGenerator<BaseConfig> {\n  constructor(config: BaseConfig) {\n    super(baseConfigSchema.parse(config));\n  }\n\n  async sendData(rows: Row[]): Promise<void> {\n    console.log(rows);\n  }\n}\n","import amqp from \"amqplib\";\nimport { z } from \"zod\";\nimport { Row } from \"../types\";\nimport BaseGenerator, { baseConfigSchema } from \"./BaseGenerator\";\n\nconst rabbitmqConfigSchema = baseConfigSchema.merge(\n  z.object({\n    endpoint: z.string(),\n    queue: z.string(),\n    assertQueueOptions: z\n      .object({\n        exclusive: z.boolean().optional(),\n        durable: z.boolean().optional(),\n        autoDelete: z.boolean().optional(),\n        arguments: z.any().optional(),\n        messageTtl: z.number().optional(),\n        expires: z.number().optional(),\n        deadLetterExchange: z.string().optional(),\n        deadLetterRoutingKey: z.string().optional(),\n        maxLength: z.number().optional(),\n        maxPriority: z.number().optional(),\n      })\n      .optional(),\n    publishOptions: z\n      .object({\n        expiration: z.string().or(z.number()).optional(),\n        userId: z.string().optional(),\n        CC: z.string().or(z.array(z.string())).optional(),\n        mandatory: z.boolean().optional(),\n        persistent: z.boolean().optional(),\n        deliveryMode: z.boolean().or(z.number()).optional(),\n        BCC: z.string().or(z.array(z.string())).optional(),\n        contentType: z.string().optional(),\n        contentEncoding: z.string().optional(),\n        headers: z.any().optional(),\n        priority: z.number().optional(),\n        correlationId: z.string().optional(),\n        replyTo: z.string().optional(),\n        messageId: z.string().optional(),\n        timestamp: z.number().optional(),\n        type: z.string().optional(),\n        appId: z.string().optional(),\n      })\n      .optional(),\n  })\n);\n\nexport type RabbitMQConfig = z.infer<typeof rabbitmqConfigSchema>;\n\nexport default class RabbitMQGenerator extends BaseGenerator<RabbitMQConfig> {\n  connection: amqp.Connection | undefined;\n\n  constructor(config: RabbitMQConfig) {\n    super(rabbitmqConfigSchema.parse(config));\n  }\n\n  async sendData(rows: Row[]): Promise<void> {\n    try {\n      if (!this.connection) {\n        this.connection = await amqp.connect(this.config.endpoint);\n      }\n\n      const channel = await this.connection.createChannel();\n\n      await channel.assertQueue(\n        this.config.queue,\n        this.config.assertQueueOptions\n      );\n\n      const sent = channel.sendToQueue(\n        this.config.queue,\n        Buffer.from(JSON.stringify(rows)),\n        this.config.publishOptions\n      );\n\n      this.log(\"info\", `RabbitMQ Response: ${JSON.stringify(sent)}`);\n\n      await channel.close();\n    } catch (err) {\n      this.log(\"error\", `RabbitMQ Error: ${JSON.stringify(err)}`);\n\n      if (this.connection) {\n        await this.connection.close();\n        this.connection = undefined;\n      }\n    }\n  }\n}\n","import fetch from \"cross-fetch\";\nimport { z } from \"zod\";\n\nimport { Row } from \"../types\";\nimport BaseGenerator, { baseConfigSchema } from \"./BaseGenerator\";\n\nconst tinybirdConfigSchema = baseConfigSchema.merge(\n  z.object({\n    endpoint: z.string(),\n    datasource: z.string(),\n    token: z.string(),\n  })\n);\n\nexport type TinybirdConfig = z.infer<typeof tinybirdConfigSchema>;\n\nexport default class TinybirdGenerator extends BaseGenerator<TinybirdConfig> {\n  readonly endpoints = {\n    eu_gcp: \"https://api.tinybird.co\",\n    us_gcp: \"https://api.us-east.tinybird.co\",\n  } as const;\n\n  readonly events_path = \"/v0/events\" as const;\n\n  constructor(config: TinybirdConfig) {\n    super(tinybirdConfigSchema.parse(config));\n  }\n\n  async sendData(rows: Row[]): Promise<void> {\n    const params = { name: this.config.datasource, from: \"mockingbird\" };\n    const endpointURL =\n      this.config.endpoint in this.endpoints\n        ? this.endpoints[this.config.endpoint as keyof typeof this.endpoints]\n        : this.config.endpoint;\n    const url = new URL(`${endpointURL}${this.events_path}`);\n    Object.entries(params).forEach(([k, v]) => url.searchParams.set(k, v));\n\n    await fetch(url, {\n      headers: {\n        Authorization: `Bearer ${this.config.token}`,\n      },\n      method: \"POST\",\n      body: rows.map((d) => JSON.stringify(d)).join(\"\\n\"),\n    })\n      .then((res) => {\n        const contentType = res.headers.get(\"Content-Type\");\n        if (contentType && contentType.toLowerCase().indexOf(\"text\") > -1) {\n          return res.text();\n        }\n        return res.json();\n      })\n      .then((res) => {\n        this.log(\"info\", `Tinybird Response: ${JSON.stringify(res)}`);\n      })\n      .catch((err) => {\n        this.log(\"error\", `Tinybird Error: ${JSON.stringify(err)}`);\n      });\n  }\n}\n","import fetch from \"cross-fetch\";\nimport { z } from \"zod\";\n\nimport { Row } from \"../types\";\nimport BaseGenerator, { baseConfigSchema } from \"./BaseGenerator\";\n\nconst upstashKafkaConfigSchema = baseConfigSchema.merge(\n  z.object({\n    address: z.string().url(),\n    user: z.string(),\n    pass: z.string(),\n    topic: z.string(),\n  })\n);\n\nexport type UpstashKafkaConfig = z.infer<typeof upstashKafkaConfigSchema>;\n\nexport default class UpstashKafkaGenerator extends BaseGenerator<UpstashKafkaConfig> {\n  readonly auth: string;\n\n  constructor(config: UpstashKafkaConfig) {\n    super(upstashKafkaConfigSchema.parse(config));\n\n    this.auth = Buffer.from(`${this.config.user}:${this.config.pass}`).toString(\n      \"base64\"\n    );\n  }\n\n  async sendData(rows: Row[]): Promise<void> {\n    const url = new URL(`${this.config.address}/produce/${this.config.topic}`);\n\n    await Promise.all(\n      rows.map((row) =>\n        fetch(url, {\n          headers: { Authorization: `Basic ${this.auth}` },\n          method: \"POST\",\n          body: JSON.stringify({ value: JSON.stringify(row) }),\n        })\n          .then((res) => res.json())\n          .then((metadata) => {\n            if (metadata.error) {\n              throw new Error(metadata.error);\n            }\n\n            this.log(\"info\", `Upstash Response: ${JSON.stringify(metadata)}`);\n          })\n          .catch((err) => {\n            this.log(\"error\", `Upstash Error: ${JSON.stringify(err)}`);\n          })\n      )\n    );\n  }\n}\n"],"mappings":"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","names":["import_zod","import_lodash","_get","schemaSchema","_get","import_zod","fetch","import_cross_fetch","import_zod","fetch","import_zod","amqp","import_cross_fetch","import_zod","fetch","import_cross_fetch","import_zod","fetch"]}